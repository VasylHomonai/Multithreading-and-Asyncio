from threading import Thread
from shutil import copy2
from pathlib import Path
import time

"""–¶–µ –ø—Ä–∏–∫–ª–∞–¥ –Ω–∞ –±–∞–≥–∞—Ç–æ–ø–æ—Ç–æ—á–Ω—ñ—Å—Ç—å, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –º–æ–¥—É–ª—è threading –¥–ª—è —Ç–æ–≥–æ —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ —è–∫ –ø—Ä–∞—Ü—é—î –±–∞–≥–∞—Ç–æ–ø–æ—Ç–æ—á–Ω—ñ—Å—Ç—å.
–¢—É—Ç –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –æ–¥–Ω–æ—á–∞—Å–Ω–µ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è 4 —Ñ–∞–π–ª—ñ–≤ –∑ –æ–¥–Ω–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥—É –≤ —ñ–Ω—à–∏–π"""

# –®–ª—è—Ö–∏ –¥–æ —Ñ–∞–π–ª—ñ–≤
source = Path("source/")
source_1 = Path("source/file_1.exe")
source_2 = Path("source/file_2.exe")
source_3 = Path("source/file_3.exe")
source_4 = Path("source/file_4.exe")

# –®–ª—è—Ö–∏ –ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤
target = Path("target/")
target_1 = Path("target/file_1.exe")
target_2 = Path("target/file_2.exe")
target_3 = Path("target/file_3.exe")
target_4 = Path("target/file_4.exe")

def copy_file(source: Path, target: Path):
    try:
        print(f"üîÑ –ü–æ—á–∞—Ç–æ–∫ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è: {source.name}")
        copy2(source, target)
        print(f"‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è: {source.name}")
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è: {source.name}: {e}")

def copy_all_files_multithreaded(source: Path, target: Path):
    threads = []
    for file in source.iterdir():
        if file.is_file():
            target_file = target / file.name
            thread = Thread(target=copy_file, args=(file, target_file))
            threads.append(thread)
            thread.start()

    # –ß–µ–∫–∞—î–º–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –≤—Å—ñ—Ö –ø–æ—Ç–æ–∫—ñ–≤
    for thread in threads:
        thread.join()

def copy_files():
    start_time = time.perf_counter()
    copy_file(source_1, target_1)
    copy_file(source_2, target_2)
    copy_file(source_3, target_3)
    copy_file(source_4, target_4)
    end_time = time.perf_counter()
    print(f"‚è±Ô∏è –£—Å—ñ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ –∑–∞ {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

def copy_files_multithreaded():
    # –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ—Ç–æ–∫–∏
    thread1 = Thread(target=copy_file, args=(source_1, target_1))
    thread2 = Thread(target=copy_file, args=(source_2, target_2))
    thread3 = Thread(target=copy_file, args=(source_3, target_3))
    thread4 = Thread(target=copy_file, args=(source_4, target_4))

    start_time = time.perf_counter()

    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–æ—Ç–æ–∫–∏
    thread1.start()
    thread2.start()
    thread3.start()
    thread4.start()

    # –ß–µ–∫–∞—î–º–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –æ–±–æ—Ö –ø–æ—Ç–æ–∫—ñ–≤
    thread1.join()
    thread2.join()
    thread3.join()
    thread4.join()

    end_time = time.perf_counter()
    print(f"‚è±Ô∏è –£—Å—ñ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ –∑–∞ {end_time - start_time:.2f} —Å–µ–∫.")

def main():
    # –ë–∞–≥–∞—Ç–æ–ø–æ—Ç–æ—á–Ω–µ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤
    target.mkdir(parents=True, exist_ok=True)
    start = time.perf_counter()
    copy_all_files_multithreaded(source, target)
    end = time.perf_counter()
    print(f"\n‚è±Ô∏è –£—Å—ñ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ –∑–∞ {end - start:.2f} —Å–µ–∫.")

    # –Ü–Ω—à–∏–π —Å–ø–æ—Å—ñ–± –±–∞–≥–∞—Ç–æ–ø–æ—Ç–æ—á–Ω–æ–≥–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤
    # copy_files_multithreaded()

    # –ó–≤–∏—á–∞–π–Ω–µ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–µ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤
    # copy_files()


if __name__ == '__main__':
    main()